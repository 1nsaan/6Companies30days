class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int dist[][] = new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++)
                    if(i!=j) dist[i][j] = Integer.MAX_VALUE;
        }
        for(int i=0;i<edges.length;i++){
            int p = edges[i][0];
            int q = edges[i][1];
            int w = edges[i][2];
            dist[p][q] = dist[q][p] = w;
        }

        for (int k = 0; k < n; k++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if(dist[i][k]!= Integer.MAX_VALUE && dist[k][j]!= Integer.MAX_VALUE)
                          dist[i][j] = Math.min(dist[i][j], dist[i][k]+dist[k][j]);
                }
            }
        }

        int min = n;
        int ans = -1;
        int count=0;
        for(int i=0;i<n;i++){
            count=0;
            for(int j=0;j<n;j++){
                if(dist[i][j] <= distanceThreshold) count++;
            }
            if(count < min){
                min = count;
                ans = i;
            }else if(count == min){
                ans = Math.max(i,ans);
            }
        }

        return ans;
    }
}
